name: PHP Composer

on:
  push:
    branches: [ "0.6.x" ]
  pull_request:
    branches: [ "0.6.x" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: PHPUnit (php-actions)
      # You may pin to the exact commit or the version.
      uses: php-actions/phpunit@1789d1964b1bfda259b1cb42a72b65299c2cae35
      # uses: php-actions/phpunit@v4
      with:
        # What version of PHP to use
        php_version: "8.3"

    - name: PHP Code Sniffer (php-actions)
      # You may pin to the exact commit or the version.
      uses: php-actions/phpcs@0a99a2845164005c597c165cd45dc594d8fe6c1d
      # uses: php-actions/phpcs@v1
      with:
        # What version of PHP to use
        php_version: "8.3"
        # Path to a vendored phpcs binary
        # vendored_phpcs_path: # optional
        # One or more files and/or directories to check
        path: "src"
        # The name or path of the coding standard to use
        standard: "PSR12"
